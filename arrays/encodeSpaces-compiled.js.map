{"version":3,"sources":["encodeSpaces.js"],"names":[],"mappings":";;AAAA;;;;AAIA;AACA;AACA;AACA;;AAEA,SAAS,YAAT,CAAsB,GAAtB,EAA0B;AACxB,MAAI,QAAQ,CAAZ;AAAA,MAAc,MAAM,IAAI,MAAxB;AACA,QAAO,IAAI,KAAJ,CAAU,EAAV,CAAP;AACA,OAAI,IAAI,IAAE,CAAV,EAAY,IAAE,GAAd,EAAkB,GAAlB,EAAsB;AACpB,QAAG,IAAI,CAAJ,MAAS,GAAZ,EAAgB;AAAC;AAAQ;AAE1B;AACD,MAAI,SAAS,CAAC,MAAM,QAAM,CAAb,CAAb;AACA,MAAI,IAAE,CAAN;AACA,OAAI,IAAI,IAAE,CAAV,EAAY,IAAE,GAAd,EAAkB,GAAlB,EAAsB;AACpB,QAAG,IAAI,CAAJ,MAAW,GAAd,EAAkB;AAChB,aAAO,GAAP,IAAc,GAAd;AACA,aAAO,GAAP,IAAc,GAAd;AACA,aAAO,GAAP,IAAc,GAAd;AACD,KAJD,MAKI;AACF,aAAO,GAAP,IAAc,IAAI,CAAJ,CAAd;AACD;AACF;;AAED,SAAO,OAAO,IAAP,CAAY,EAAZ,CAAP;AACD;;AAED,IAAI,MAAO,IAAX;AACA,IAAI,SAAU,aAAa,GAAb,CAAd;AACA,QAAQ,GAAR,CAAY,sBAAZ,EAAmC,GAAnC;AACA,QAAQ,GAAR,CAAY,oBAAZ,EAAiC,MAAjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,QAAQ,MAAR,EAAgB,MAA7B;AACA,OAAO,CAAP,EAAU,EAAV,CAAa,EAAb,CAAgB,CAAhB,CAAkB,QAAlB","file":"encodeSpaces-compiled.js","sourcesContent":["/**\n * Created by dmitrymogilko on 06/10/2016.\n */\n\n//first solution\n//1 . run over the string and find number of indexes found\n//2.  define array with size of str + number of indexes found\n//3. run over the str and when index found just replace by '%20'\n\nfunction encodeString(str){\n  var count = 0,len = str.length;\n  str  = str.split('');\n  for(var i=0;i<len;i++){\n    if(str[i]===' '){count++};\n    \n  }\n  var newArr = [len + count*2];\n  var j=0;\n  for(var i=0;i<len;i++){\n    if(str[i] === ' '){\n      newArr[j++] = '%'\n      newArr[j++] = '2';\n      newArr[j++] = '0';\n    }\n    else{\n      newArr[j++] = str[i];\n    }\n  }\n\n  return newArr.join('');\n}\n\nvar str  = \" d\";\nvar newStr  = encodeString(str);\nconsole.log(\"Original String is :\",str);\nconsole.log(\"After the replace:\",newStr);\n\n//tests\n//1 . empty string , null\n//string containing continuos spaces\n// string with one character - space\n// string with one character - not space\n//string without spaces\n//string with containg %20\nvar expect = require('chai').expect;\nexpect(1).to.be.a('number');\n\n\n\n"]}